(function() {var implementors = {};
implementors["ansi_term"] = [{"text":"impl RefUnwindSafe for Prefix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Infix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Suffix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; RefUnwindSafe for ANSIGenericString&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; RefUnwindSafe for ANSIGenericStrings&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;S as ToOwned&gt;::Owned: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Colour","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["bstr"] = [{"text":"impl RefUnwindSafe for BStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BString","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Bytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Fields&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, F&gt; RefUnwindSafe for FieldsWith&lt;'a, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Find&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FindReverse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Finder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FinderReverse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Lines&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for LinesWithTerminator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Split&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SplitN&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SplitNReverse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SplitReverse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrainBytes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FromUtf8Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SentenceIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Sentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WordIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Words&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WordsWithBreakIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WordsWithBreaks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CharIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Chars&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Utf8Chunk&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Utf8Chunks&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utf8Error","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for ByteLines&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; RefUnwindSafe for ByteRecords&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["cargo_metadata"] = [{"text":"impl RefUnwindSafe for Dependency","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Artifact","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArtifactProfile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuildFinished","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuildScript","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompilerMessage","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for MessageIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PackageId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Resolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NodeDep","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepKindInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Package","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Target","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetadataCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DependencyKind","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CargoOpt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiagnosticCode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiagnosticSpanLine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiagnosticSpanMacroExpansion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiagnosticSpan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Diagnostic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Applicability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiagnosticLevel","synthetic":true,"types":[]}];
implementors["cargo_preflight"] = [{"text":"impl RefUnwindSafe for Arguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SimulationArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PanicHandleArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CargoArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CargoSpawnedArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreflightCommand","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for HarnessImpl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; RefUnwindSafe for AvionicsHarness&lt;P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LAST_SENSORS","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PanicHang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PanicCaught","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shell","synthetic":true,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for App&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for Arg&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ArgGroup&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ArgMatches&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for OsValues&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SubCommand&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AppSettings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArgSettings","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ErrorKind","synthetic":true,"types":[]}];
implementors["csv"] = [{"text":"impl RefUnwindSafe for ByteRecord","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; RefUnwindSafe for ByteRecordIter&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Position","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeserializeError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FromUtf8Error","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; !RefUnwindSafe for IntoInnerError&lt;W&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Utf8Error","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ByteRecordsIntoIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, R&gt; RefUnwindSafe for ByteRecordsIter&lt;'r, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, D&gt; RefUnwindSafe for DeserializeRecordsIntoIter&lt;R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, R, D&gt; RefUnwindSafe for DeserializeRecordsIter&lt;'r, R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Reader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderBuilder","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for StringRecordsIntoIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, R&gt; RefUnwindSafe for StringRecordsIter&lt;'r, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringRecord","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; RefUnwindSafe for StringRecordIter&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for Writer&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriterBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeserializeErrorKind","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuoteStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Terminator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Trim","synthetic":true,"types":[]}];
implementors["csv_core"] = [{"text":"impl RefUnwindSafe for Reader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Writer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriterBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadFieldNoCopyResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadFieldResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadRecordNoCopyResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadRecordResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Terminator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuoteStyle","synthetic":true,"types":[]}];
implementors["darling_core"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Fields&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;P, W&gt; RefUnwindSafe for Generics&lt;P, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V, F&gt; RefUnwindSafe for Data&lt;V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;T, L, C&gt; RefUnwindSafe for GenericParam&lt;T, L, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;L: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Options","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Purpose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ignored","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathList","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SpannedValue&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, O&gt; RefUnwindSafe for WithOriginal&lt;T, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flag","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Override&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["dlopen"] = [{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OverlappingSymbol","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddressInfoObtainer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; RefUnwindSafe for Symbol&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; RefUnwindSafe for PtrOrNull&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; RefUnwindSafe for PtrOrNullMut&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; RefUnwindSafe for Ref&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'lib, T&gt; RefUnwindSafe for RefMut&lt;'lib, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Container&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Container&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Api, Optional&gt; RefUnwindSafe for OptionalContainer&lt;Api, Optional&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Api: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Optional: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl RefUnwindSafe for FnvHasher","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["glob"] = [{"text":"impl !RefUnwindSafe for Paths","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GlobError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatternError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pattern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchOptions","synthetic":true,"types":[]}];
implementors["ident_case"] = [{"text":"impl RefUnwindSafe for RenameRule","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl RefUnwindSafe for Buffer","synthetic":true,"types":[]}];
implementors["lerp"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for LerpIterator&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl RefUnwindSafe for ParseFloatError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloatErrorKind","synthetic":true,"types":[]}];
implementors["pest"] = [{"text":"impl&lt;'i, R&gt; RefUnwindSafe for ParserState&lt;'i, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for Position&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for Lines&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for Span&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Atomicity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lookahead","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchDir","synthetic":true,"types":[]},{"text":"impl&lt;'i, R&gt; RefUnwindSafe for Token&lt;'i, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Error&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ErrorVariant&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InputLocation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LineColLocation","synthetic":true,"types":[]},{"text":"impl&lt;'i, R&gt; !RefUnwindSafe for FlatPairs&lt;'i, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i, R&gt; !RefUnwindSafe for Pair&lt;'i, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i, R&gt; !RefUnwindSafe for Pairs&lt;'i, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i, R&gt; !RefUnwindSafe for Tokens&lt;'i, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for Operator&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for PrecClimber&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Assoc","synthetic":true,"types":[]}];
implementors["pest_meta"] = [{"text":"impl RefUnwindSafe for Rule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTopDownIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuleType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptimizedRule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptimizedExprTopDownIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptimizedExpr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PestParser","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for ParserRule&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for ParserNode&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rule","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; RefUnwindSafe for ParserExpr&lt;'i&gt;","synthetic":true,"types":[]}];
implementors["preflight"] = [{"text":"impl !RefUnwindSafe for Sensors","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Vector3&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Guidance","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ThrustVector","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Control","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AbortCause","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !RefUnwindSafe for TokenStream","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LexError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Punct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ident","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TokenTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Delimiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spacing","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IntoIter","synthetic":true,"types":[]}];
implementors["proc_macro_error"] = [{"text":"impl RefUnwindSafe for Diagnostic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpanRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Level","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl RefUnwindSafe for Bernoulli","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Open01","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenClosed01","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binomial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cauchy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dirichlet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Beta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChiSquared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FisherF","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StudentT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Normal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StandardNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pareto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Poisson","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Triangular","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnitCircle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnitSphereSurface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Weibull","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; RefUnwindSafe for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Standard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; RefUnwindSafe for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WeightedError","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;W as SampleUniform&gt;::Sampler: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EntropyRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StdRng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadRng","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; RefUnwindSafe for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StepRng","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; RefUnwindSafe for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndexVecIntoIter","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl RefUnwindSafe for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OsRng","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; RefUnwindSafe for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; RefUnwindSafe for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["semver"] = [{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VersionReq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Identifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SemVerError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReqParseError","synthetic":true,"types":[]}];
implementors["semver_parser"] = [{"text":"impl RefUnwindSafe for RangeSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Comparator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Range","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Compat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Identifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Op","synthetic":true,"types":[]},{"text":"impl&lt;'input&gt; RefUnwindSafe for Lexer&lt;'input&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input&gt; RefUnwindSafe for Token&lt;'input&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'input&gt; RefUnwindSafe for Parser&lt;'input&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'input&gt; RefUnwindSafe for Error&lt;'input&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Identifier","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl RefUnwindSafe for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; RefUnwindSafe for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; RefUnwindSafe for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; RefUnwindSafe for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; RefUnwindSafe for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; RefUnwindSafe for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; RefUnwindSafe for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; RefUnwindSafe for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; RefUnwindSafe for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; RefUnwindSafe for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; RefUnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Number","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CharEscape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Serializer","synthetic":true,"types":[]}];
implementors["strsim"] = [{"text":"impl RefUnwindSafe for StrSimError","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl !RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MetaList","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VisCrate","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VisPublic","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for VisRestricted","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAsync","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprBinary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBreak","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprCall","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprCast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprClosure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprContinue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprField","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprForLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprIf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprInPlace","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLet","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprLit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprParen","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRepeat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReturn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprUnary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ExprVerbatim","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprWhile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprYield","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ConstParam","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Generics","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PredicateEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PredicateType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitBound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeParam","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitBool","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitByte","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitByteStr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitChar","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitFloat","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitInt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitStr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LitVerbatim","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataEnum","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataStruct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DataUnion","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DeriveInput","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Abi","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BareFnArg","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeArray","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeGroup","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeInfer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeMacro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeNever","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeParen","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypePath","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypePtr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeReference","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeSlice","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeTuple","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeVerbatim","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Constraint","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for QSelf","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AttrStyle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for NestedMeta","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Fields","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Visibility","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Member","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GenericParam","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WherePredicate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloatSuffix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntSuffix","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Lit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StrStyle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for UnOp","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for BareFnArgName","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReturnType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GenericArgument","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PathArguments","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Underscore","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Abstract","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for As","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Async","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Auto","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Become","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Crate","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Default","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Do","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dyn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Else","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Existential","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Final","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Fn","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for For","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for If","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for In","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Move","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Mut","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Override","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Priv","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Pub","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ref","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Return","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SelfType","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SelfValue","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Super","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Trait","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Try","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Typeof","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Union","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Unsafe","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Unsized","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Virtual","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for While","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Yield","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AddEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for And","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AndAnd","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AndEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for At","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Bang","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Caret","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CaretEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Colon","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Colon2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Comma","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DivEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dollar","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dot","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dot2","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Dot3","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DotDotEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EqEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MulEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OrEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for OrOr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Pound","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Question","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RArrow","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for LArrow","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Rem","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RemEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FatArrow","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Semi","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Shl","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShlEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Shr","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ShrEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Star","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SubEq","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Tilde","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Brace","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Bracket","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Paren","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for IntoIter&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !RefUnwindSafe for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]}];
implementors["termcolor"] = [{"text":"impl RefUnwindSafe for StandardStream","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for StandardStreamLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferedStandardStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BufferWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Buffer","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for NoColor&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for Ansi&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorSpec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseColorError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorChoice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Color","synthetic":true,"types":[]}];
implementors["textwrap"] = [{"text":"impl RefUnwindSafe for HyphenSplitter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoHyphenation","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized&gt; RefUnwindSafe for Options&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Word&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WrapAlgorithm","synthetic":true,"types":[]}];
implementors["timescale"] = [{"text":"impl&lt;Datapoint, Time&gt; RefUnwindSafe for InterpolatedDataPoint&lt;Datapoint, Time&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Datapoint: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Time: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ucd_trie"] = [{"text":"impl RefUnwindSafe for TrieSetOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TrieSetSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]}];
implementors["uom"] = [{"text":"impl RefUnwindSafe for ConstantOp","synthetic":true,"types":[]},{"text":"impl&lt;D:&nbsp;?Sized, U:&nbsp;?Sized, V&gt; RefUnwindSafe for Quantity&lt;D, U, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decameter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for meter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decimeter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimeter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimeter_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micrometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctometer_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for galileo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimeter_per_minute_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottamole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettamole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for examole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petamole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teramole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigamole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megamole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilomole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectomole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decamole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decimole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micromole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanomole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picomole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtomole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attomole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptomole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctomole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for radian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for revolution","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for radian_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_per_second_squared","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for radian_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for radian_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for revolution_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for revolution_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for revolution_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_yottameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_zettameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_exameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_petameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_terameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_gigameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_megameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_kilometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_hectometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_decameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_micrometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_nanometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_picometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_femtometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_attometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_zeptometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_yoctometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for acre","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for are","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for barn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for circular_mil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectare","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_mile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_yard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decajoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decijoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centijoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microjoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctojoule_per_kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_zeptogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_attogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_femtogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_picogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_nanogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_microgram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_milligram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_gram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_megagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_gigagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_teragram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_petagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_exagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_zettagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_yottagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_pound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_pound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_it_per_gram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_per_gram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottafarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettafarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exafarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petafarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terafarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigafarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megafarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilofarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectofarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decafarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for farad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decifarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centifarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millifarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microfarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanofarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picofarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtofarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attofarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptofarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctofarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for abfarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for statfarad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottakatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettakatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exakatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petakatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terakatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigakatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megakatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilokatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectokatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decakatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for katal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decikatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centikatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millikatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microkatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanokatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picokatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtokatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attokatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptokatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctokatal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yotta_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zetta_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exa_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for peta_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for tera_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for giga_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mega_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilo_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hecto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deca_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deci_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centi_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milli_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micro_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nano_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pico_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for atto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zepto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yocto_enzyme_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decakatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for katal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decikatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centikatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millikatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microkatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctokatal_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilokatal_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for katal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for katal_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millikatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millikatal_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microkatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microkatal_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanokatal_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picokatal_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtokatal_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtokatal_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for katal_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millikatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microkatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtokatal_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for katal_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millikatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microkatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtokatal_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yotta_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zetta_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exa_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for peta_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for tera_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for giga_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mega_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilo_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hecto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deca_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deci_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centi_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milli_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micro_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nano_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pico_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for atto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zepto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yocto_enzyme_unit_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilo_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilo_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milli_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milli_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micro_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micro_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nano_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nano_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pico_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pico_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femto_enzyme_unit_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femto_enzyme_unit_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilo_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milli_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micro_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nano_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pico_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femto_enzyme_unit_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilo_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milli_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micro_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nano_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pico_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femto_enzyme_unit_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for radian_per_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_per_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for radian_per_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_per_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottacoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettacoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exacoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petacoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teracoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigacoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megacoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilocoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectocoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decacoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for coulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decicoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centicoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millicoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microcoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanocoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picocoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtocoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attocoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptocoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctocoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petaampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teraampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigaampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megaampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kiloampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectoampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decaampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microampere_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for abcoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for faraday","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for franklin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for statcoulomb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottaampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettaampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exaampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petaampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teraampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigaampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megaampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kiloampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectoampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decaampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centiampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanoampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picoampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtoampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attoampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptoampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctoampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for abampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gilbert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for statampere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottavolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettavolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exavolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petavolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teravolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigavolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megavolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilovolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectovolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decavolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for volt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decivolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centivolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millivolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanovolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picovolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtovolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attovolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptovolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctovolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for abvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for statvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottasiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettasiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exasiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petasiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terasiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigasiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megasiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilosiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectosiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decasiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for siemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mho","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decisiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centisiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millisiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microsiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanosiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picosiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtosiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attosiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptosiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctosiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for abmho","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for absiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for statsiemens","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for statmho","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottaohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettaohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exaohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petaohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teraohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigaohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megaohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kiloohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectoohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decaohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centiohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanoohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picoohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtoohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attoohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptoohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctoohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for abohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for statohm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottajoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettajoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exajoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petajoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terajoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigajoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megajoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectojoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decajoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decijoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centijoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microjoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanojoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picojoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtojoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attojoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptojoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctojoule","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petawatt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terawatt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigawatt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megawatt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilowatt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectowatt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decawatt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliwatt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microwatt_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petaelectronvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teraelectronvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigaelectronvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megaelectronvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kiloelectronvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectoelectronvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decaelectronvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for electronvolt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_39","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_59","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_60","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_it","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_15","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_20","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_it_nutrition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_nutrition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for erg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_poundal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_pound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilocalorie_it","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilocalorie","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for quad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for therm_ec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for therm_us","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_tnt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottanewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettanewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exanewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petanewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teranewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for giganewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for meganewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilonewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectonewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decanewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decinewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centinewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millinewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micronewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanonewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for piconewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtonewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attonewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptonewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctonewton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for dyne","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_force","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kip","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_force","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for poundal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_force","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_force","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottahertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettahertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exahertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petahertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terahertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigahertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megahertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilohertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectohertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decahertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decihertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centihertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millihertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microhertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanohertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picohertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtohertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attohertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptohertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctohertz","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cycle_per_day","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cycle_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cycle_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cycle_per_shake","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cycle_per_year","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teragram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decagram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decigram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centigram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctogram_square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decajoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decijoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centijoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microjoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctojoule_per_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decawatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centiwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microwatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctowatt_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teragram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decagram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decigram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centigram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctogram_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_second_cubed_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decawatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centiwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microwatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctowatt_per_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_per_square_kilometer_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_per_square_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_per_square_centimeter_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_per_square_millimeter_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_second_square_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_second_square_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_hour_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_hour_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_minute_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_minute_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_second_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_second_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_hour_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_hour_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_minute_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_minute_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_second_square_foot_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_second_square_inch_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottahenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettahenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exahenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petahenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terahenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigahenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megahenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilohenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectohenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decahenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for henry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decihenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centihenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millihenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microhenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanohenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picohenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtohenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attohenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptohenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctohenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for abhenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for stathenry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yobibit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottabit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zebibit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettabit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exbibit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exabit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pebibit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petabit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for tebibit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terabit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gibibit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigabit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mebibit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megabit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kibibit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilobit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for bit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yobibyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottabyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zebibyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettabyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exbibyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exabyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pebibyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petabyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for tebibyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terabyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gibibyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigabyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mebibyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megabyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kibibyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilobyte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for byte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for octet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nibble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for crumb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for shannon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for natural_unit_of_information","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for trit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hartley","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciban","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yobibit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottabit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zebibit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettabit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exbibit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exabit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pebibit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petabit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for tebibit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terabit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gibibit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigabit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mebibit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megabit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kibibit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilobit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for bit_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yobibyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottabyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zebibyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettabyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exbibyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exabyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pebibyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petabyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for tebibyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terabyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gibibyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigabyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mebibyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megabyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kibibyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilobyte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for byte_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for octet_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decameter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for meter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decimeter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimeter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimeter_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micrometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctometer_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch_per_second_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilometer_per_minute_cubed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micrometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for angstrom","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for astronomical_unit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for chain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for fathom","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for fermi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_survey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for light_year","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microinch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micron","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mile_survey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nautical_mile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for parsec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pica_computer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pica_printers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for point_computer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for point_printers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teracandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decacandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decicandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centicandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millicandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microcandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctocandela_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_picometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_nanometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_micrometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_kilometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_megameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_gigameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_terameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela_per_square_foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for footlambert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for lambert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for stilb","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottacandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettacandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exacandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petacandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teracandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigacandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megacandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilocandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectocandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decacandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for candela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decicandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centicandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millicandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microcandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanocandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picocandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtocandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attocandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptocandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctocandela","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottaweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettaweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exaweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petaweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teraweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigaweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megaweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kiloweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectoweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decaweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for weber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centiweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanoweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picoweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtoweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attoweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptoweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctoweber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for maxwell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottatesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettatesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exatesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petatesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teratesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigatesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megatesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilotesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectotesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decatesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for tesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decitesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centitesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millitesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microtesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanotesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picotesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtotesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attotesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptotesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctotesla","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gauss","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teragram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decagram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decigram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centigram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for carat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for grain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hundredweight_long","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hundredweight_short","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_troy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pennyweight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_troy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for slug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_assay","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_long","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_short","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teragram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teragram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decagram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centigram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctogram_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for carat_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for grain_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hundredweight_long_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hundredweight_short_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_troy_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pennyweight_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_troy_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for slug_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_assay_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_long_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_short_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for grain_per_gallon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_cubic_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_per_cubic_inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_per_gallon_imperial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_per_gallon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_cubic_foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_cubic_inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_cubic_yard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_gallon_imperial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_gallon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for slug_per_cubic_foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_long_per_cubic_yard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_short_per_cubic_yard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottagram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettagram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exagram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petagram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teragram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigagram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megagram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectogram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decagram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decigram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centigram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attogram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptogram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctogram_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_day","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_day","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for carat_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for grain_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hundredweight_long_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hundredweight_short_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_troy_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pennyweight_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_per_day","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_troy_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for slug_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_assay_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_long_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_short_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_short_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for examole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teramole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decamole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decimole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micromole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctomole_per_cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilomole_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mole_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimole_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micromole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micromole_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanomole_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picomole_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtomole_per_cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtomole_per_liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mole_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimole_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micromole_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtomole_per_deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mole_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimole_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micromole_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtomole_per_milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_square_meter_per_second_squared_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottajoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettajoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exajoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petajoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terajoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigajoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megajoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectojoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decajoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decijoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centijoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microjoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanojoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picojoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtojoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attojoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptojoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctojoule_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilowatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectowatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decawatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliwatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microwatt_hour_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_39_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_59_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_60_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_it_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_15_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_20_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_it_nutrition_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for calorie_nutrition_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for electronvolt_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for erg_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_poundal_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_pound_force_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilocalorie_it_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilocalorie_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for quad_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for therm_ec_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for therm_us_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_tnt_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_second_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottagram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettagram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exagram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petagram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teragram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigagram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megagram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectogram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decagram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decigram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centigram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attogram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptogram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctogram_per_mole","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teragram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decagram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decigram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centigram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctogram_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_yottameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_zettameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_exameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_petameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_terameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_gigameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_megameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_kilometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_hectometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_decameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_decimeter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_centimeter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_millimeter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_micrometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_nanometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_picometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_femtometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_attometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_zeptometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_yoctometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ton_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_meter_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_meter_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_meter_per_day","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for slug_foot_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for slug_inch_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_foot_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_inch_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottawatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettawatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exawatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petawatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terawatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigawatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megawatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilowatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectowatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decawatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciwatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centiwatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliwatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microwatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanowatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picowatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtowatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attowatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptowatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctowatt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for erg_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_pound_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_pound_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_pound_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for horsepower","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for horsepower_boiler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for horsepower_electric","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for horsepower_metric","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for horsepower_imperial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hydraulic_horsepower","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottapascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettapascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exapascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petapascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terapascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigapascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megapascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilopascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectopascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decapascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decipascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centipascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millipascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micropascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanopascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picopascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtopascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attopascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptopascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctopascal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for atmosphere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for atmosphere_technical","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for bar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimeter_of_mercury_0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimeter_of_mercury","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimeter_of_water_4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimeter_of_water","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for dyne_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_of_mercury","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_of_water_39_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_of_water","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_force_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch_of_mercury_32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch_of_mercury_60","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch_of_mercury","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch_of_water_39_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch_of_water_60","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch_of_water","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_force_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_force_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_force_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kip_per_square_inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millibar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimeter_of_mercury","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimeter_of_water","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millitorr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for poundal_per_square_foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_force_per_square_foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_force_per_square_inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for psi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for torr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ratio","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for part_per_hundred","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for percent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for part_per_thousand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for per_mille","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for part_per_ten_thousand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for basis_point","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for part_per_million","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for part_per_billion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for part_per_trillion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for part_per_quadrillion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_kilometer_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_meter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_centimeter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_millimeter_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_micrometer_per_second_squared_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decajoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decijoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centijoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microjoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctojoule_per_kilogram_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_kilogram_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_gram_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_kilogram_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_gram_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_kilogram_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_gram_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_ounce_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_ounce_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_pound_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_pound_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_per_ton_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for btu_it_per_ton_degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for steradian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for spat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_degree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for square_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decajoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decijoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centijoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microjoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctojoule_per_square_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigajoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megajoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectojoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decajoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decijoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centijoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microjoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanojoule_per_square_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigajoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megajoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilojoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectojoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decajoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for joule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decijoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centijoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millijoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microjoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanojoule_per_square_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decikelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centikelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millikelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microkelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_rankine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teragram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decagram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decigram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centigram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milligram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microgram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctogram_meter_per_second_cubed_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decawatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centiwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microwatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctowatt_per_meter_kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_meter_per_second_cubed_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilowatt_per_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for watt_per_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliwatt_per_meter_degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decakelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decikelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centikelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millikelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microkelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctokelvin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_celsius","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_fahrenheit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for degree_rankine","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottasecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettasecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exasecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petasecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terasecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigasecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megasecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilosecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectosecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decasecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decisecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centisecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millisecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microsecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanosecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picosecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtosecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attosecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptosecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctosecond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for second_sidereal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for day","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for day_sidereal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hour_sidereal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for shake","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for year","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for year_sidereal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for year_tropical","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottanewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettanewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exanewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petanewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teranewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for giganewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for meganewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilonewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectonewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decanewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decinewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centinewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millinewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micronewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanonewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for piconewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtonewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attonewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptonewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctonewton_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_yottameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_zettameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_exameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_petameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_terameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_gigameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_megameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_kilometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_hectometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_decameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_micrometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_nanometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_picometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_femtometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_attometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_zeptometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for newton_yoctometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for dyne_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for dyne_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilogram_force_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ounce_force_inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_force_foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pound_force_inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for terameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decimeter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centimeter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimeter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for micrometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for foot_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for inch_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kilometer_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for knot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mile_per_hour","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mile_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for mile_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for millimeter_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_yottameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_zettameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_exameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_petameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_terameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_gigameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_megameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_kilometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_hectometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_decameter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_meter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_decimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_centimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_millimeter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_micrometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_nanometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_picometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_femtometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_attometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_zeptometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_yoctometer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for acre_foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for barrel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for bushel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_foot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_inch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_mile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_yard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for fluid_ounce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for fluid_ounce_imperial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gallon_imperial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gallon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gill_imperial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gill","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottaliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettaliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exaliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petaliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teraliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigaliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megaliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kiloliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectoliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decaliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for liter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centiliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanoliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picoliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtoliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attoliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptoliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctoliter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for peck","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pint_dry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pint_liquid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for quart_dry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for quart_liquid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for stere","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for tablespoon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teaspoon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for register_ton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_yottameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_zettameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_exameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_petameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_terameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_gigameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_megameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_kilometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_hectometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_decameter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_meter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_decimeter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_centimeter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_millimeter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_micrometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_nanometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_picometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_femtometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_attometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_zeptometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_yoctometer_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yottaliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zettaliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for exaliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for petaliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teraliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gigaliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for megaliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for kiloliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for hectoliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for decaliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for liter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for deciliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for centiliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for milliliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for microliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for nanoliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for picoliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for femtoliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for attoliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for zeptoliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for yoctoliter_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for acre_foot_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for barrel_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for bushel_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cord_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_foot_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_foot_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_inch_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_inch_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_mile_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_yard_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cubic_yard_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for cup_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for fluid_ounce_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for fluid_ounce_imperial_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gallon_imperial_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gallon_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gallon_per_minute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gallon_per_day","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gill_imperial_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for gill_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for peck_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pint_dry_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pint_liquid_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for quart_dry_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for quart_liquid_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for stere_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for tablespoon_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for teaspoon_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for register_ton_per_second","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Units","synthetic":true,"types":[]},{"text":"impl&lt;D:&nbsp;?Sized, N&gt; RefUnwindSafe for Arguments&lt;D, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D:&nbsp;?Sized, U:&nbsp;?Sized, V, N&gt; RefUnwindSafe for QuantityArguments&lt;D, U, V, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DisplayStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseQuantityError","synthetic":true,"types":[]}];
implementors["uuid"] = [{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Uuid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hyphenated","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for HyphenatedRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Simple","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SimpleRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Urn","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for UrnRef&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; RefUnwindSafe for VecMap&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for VacantEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for OccupiedEntry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Iter&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for IterMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Keys&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Values&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for ValuesMut&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for IntoIter&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Drain&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, V&gt; RefUnwindSafe for Entry&lt;'a, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()